<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Default Setup

// Levels 1-&gt;5 contain only yellow AC
// Levels 6-&gt;10 contain red &amp; yellow
// Levels 11+ contain red, blue and yellow
// Every level adds 1 AC
// Level 16+ adds 1 y/r/b ac in order to infinity
// AC spawn every 5 seconds until level limit is reached and come in from a random location
// Any AC that leave the window return after 5 seconds from a random location

LevelID = 1;
YellowACCount = 1;
RedACCount = 0;
BlueACCount = 0;

// Spawn gates
// x500,y400 - E
nextGate = instance_create(500, 400, obj_Gate);
nextGate.GateNumber = 1;
nextGate.GateDir = "E";

// x1000,y200 - E
nextGate = instance_create(1000, 200, obj_Gate);
nextGate.GateNumber = 2;
nextGate.GateDir = "E";

// x1500, y300 - E
nextGate = instance_create(1500, 300, obj_Gate);
nextGate.GateNumber = 3;
nextGate.GateDir = "E";

// x1200, y700 - W
nextGate = instance_create(1200, 700, obj_Gate);
nextGate.GateNumber = 4;
nextGate.GateDir = "W";
nextGate.image_angle = 180;

// x800, y600 - W
nextGate = instance_create(800, 600, obj_Gate);
nextGate.GateNumber = 5;
nextGate.GateDir = "W";
nextGate.image_angle = 180;

// Yellow exit gate
nextGate = instance_create(16, 600, obj_Gate);
nextGate.GateNumber = -1;
nextGate.GateDir = "YE"; // Yellow exit
nextGate.image_index = 1;
nextGate.image_angle = 180;

// Spawn first AC
newAC = instance_create(-64, -64, obj_AC);
newAC.alarm[0] = 5*room_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Score handling

ini_open("highscores.ini");
HighScore = ini_read_real("Scores", "HighScore", 0);
GameHighScore = 0;
global.CurrentScore = 0;
ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Help menu text

display_msg = false;
msg1 = "Press 'H' to dislpay help menu";
msg2 = "Guide the aircraft through the indicated gate
    in the correct direction
Click on the arrows arround the aircraft to change
    it's direction
Only aircraft at the same level (colour) can collide
Scoring key:
    Pass Gate: 10
    Complete Route: 50
    Leave Area: -80
    Collide: -3000
The game resets when your score reaches 0
'H' to hide this menu";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gameplay Handler

// Start next level if previous completed
if(!instance_exists(obj_AC)){
    
    // Start next level
    LevelID += 1;
    scr_NewLevel(LevelID);
    scr_UpdateHighscore(global.CurrentScore, self);
}

// Update score
if(GameHighScore &lt; global.CurrentScore){
    GameHighScore = global.CurrentScore;
}

if(LevelID != 1 &amp;&amp; global.CurrentScore &lt;= 5){
    LevelID = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw current score and help message

draw_text(16, 16, ("Score: " + string(global.CurrentScore)));
draw_text(800, 16, ("Highest score this game: " + string(GameHighScore)));
draw_text(1520, 16, ("Highscore: " + string(HighScore)));

if(display_msg){
    draw_text(1520, 48, msg2);
} else {
    draw_text(1520, 48, msg1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_msg = !display_msg;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
